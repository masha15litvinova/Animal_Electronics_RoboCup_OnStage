float alfa = 0.001;

//Переменные управления интервалами опроса гироприбора и интервалами управления
int32_t dt;
int32_t t0;
int32_t t2;

double  GyXsum0;
// Длина окружности колеса 25см, 250мм
// Количество шагов на оборот - 200 (360/1.8)
// Количество микрошагов - 200*16 = 3200 на оборот

//==============================================================================
// Расстояние от оси колеса до гироприбора 225мм - потребуется для расчета пройденного до выпрямления расстояния
//==============================================================================

// Следует учесть, что чем ниже центр масс робота тем меньше момент инерции, тем быстрее нужно компенсировать наклон
// В то время, как чем выше центр масс тем дальше расстояние, которое нужно пройти роботу, чтобы компенсировать угол наклона...

int32_t t_period;
double CommandSpeed = 0; //Скорость управляемого движения на 100 сек.
double OldCommandSpeed = 0; //Скорость управляемого движения из предыдущего опроса
double Turn = 0; //Поворот.

volatile int32_t counter_stepL; //Счетчик шагов левого мотора
volatile int32_t counter_stepR; //Счетчик шагов правого мотора
bool flag_crash = true;
bool flag_time_standup = true;// Флаг того, что робот встает.
uint32_t time_standup = 0; // Время на подъем робота
double XSpeed = 0; //Реальная скорость по шагам в моторах
double  OldXSpeed = 0; //Реальная скорость по шагам в моторах

//Нужно его использовать
int32_t XL, XR; //Счетчик тактов на колесо в текущей итерации
int32_t OldCommandSpeed_dMove = 0;

bool flag_to_off_robot  = false; //Флаг выключения робота
int32_t time_to_off_robot = 0; //Время наприсадку робота
uint32_t time_stop_move=0;

double  Km = 0.0002;//.0325
double  Kdm = 0.0018;//.03//возврат после отклонения как по энкодеру
double  Kddm = 0.000013;//.00025//раскачивает
double  Ka = 980.0 / ( PI );//1050
double  Kg = 145.0 / ( PI);
double  Kdg = 0.0023;//.0025//затормаживание большой амплитуды
 //Предел интегрального звена Move, выше которого можно считать, что робот упал
double  MoveLimit = 0.09*Ka/Km; //0.5
//переменная мув содержит абсолютное значения количества шагов пермещения робота от точки старта. Если этоколичество превышает заданное, то откл
double  dMoveLimit = 0.019*Ka/Km; //0.5
//переменная мув содержит абсолютное значения количества шагов пермещения робота от точки старта. Если этоколичество превышает заданное, то откл

double vertical_Y_adjustment = 0.04;//угол отклонения от идеального перпендикуляра 0.023

double Speed = 0;
double OldSpeed = 0;
double OldGyro = 0;

double Move = 0; //Пройденный путь.
double dMove = 0;
double ddMove = 0;
double dMoveOld = 0;
double dGyro = 0;
double GyroOld = 0;
